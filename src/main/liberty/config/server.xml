<!--
       Copyright 2017-2020 IBM Corp All Rights Reserved
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<server description="Messaging server">
    <!-- Enable features -->
    <featureManager>
        <feature>mdb-3.2</feature>
        <feature>ejbLite-3.2</feature>
        <feature>jndi-1.0</feature>
        <feature>jsonb-1.0</feature>
        <feature>jca-1.7</feature>
        <feature>jms-2.0</feature>
        <feature>mpRestClient-1.4</feature>
        <feature>mpConfig-1.4</feature>
        <feature>cdi-2.0</feature>
        <feature>ssl-1.0</feature>
<!--    <feature>wasJmsClient-2.0</feature> -->
        <feature>appSecurity-3.0</feature>
        <feature>jwt-1.0</feature>
<!--    <feature>logstashCollector-1.0</feature> -->
    </featureManager>

    <variable name="JWT_AUDIENCE" defaultValue="stock-trader"/>
    <variable name="JWT_ISSUER" defaultValue="http://stock-trader.ibm.com"/>

    <logging traceSpecification="*=info" consoleLogLevel="INFO" />

    <keyStore id="defaultKeyStore" password="St0ckTr@der" type="pkcs12"
         location="${server.config.dir}/resources/security/key.p12" />

    <keyStore id="defaultTrustStore" password="St0ckTr@der" type="pkcs12"
         location="${server.config.dir}/resources/security/trust.p12" />

    <ssl id="defaultSSLConfig" keyStoreRef="defaultKeyStore" trustStoreRef="defaultTrustStore" trustDefaultCerts="true" />

    <jwtBuilder id="defaultJWT" keyStoreRef="defaultTrustStore" keyAlias="jwtSigner" issuer="${JWT_ISSUER}" audiences="${JWT_AUDIENCE}" />

    <authData id="MQ-Credentials" user="${env.MQ_ID}" password="${env.MQ_PASSWORD}" />

    <resourceAdapter id="mq" location="/config/wmq.jmsra.rar" />

    <jmsActivationSpec id="Messaging/MessagingEJB/MessagingMDB" authDataRef="MQ-Credentials" maxEndpoints="1">
        <properties.mq 
            transportType="CLIENT"
            hostName="${env.MQ_HOST}" 
            port="${env.MQ_PORT}"
            channel="${env.MQ_CHANNEL}"
            queueManager="${env.MQ_QUEUE_MANAGER}"
            destinationRef="NotificationQ"
            destinationType="javax.jms.Queue" />
    </jmsActivationSpec>
    <jmsQueue id="NotificationQ" jndiName="jms/StockTrader/NotificationQueue">
        <properties.mq baseQueueName="${env.MQ_QUEUE}" baseQueueManagerName="${env.MQ_QUEUE_MANAGER}" />
    </jmsQueue>

<!-- Use this to be a client to Liberty's built-in JMS provider (running in a messaging-engine pod) instead of MQ
    <jmsActivationSpec id="Messaging/MessagingEJB/MessagingMDB" maxEndpoints="1">
        <properties.wasJms destination="NotificationQ" remoteServerAddress="messaging-engine-service:7276:BootstrapBasicMessaging" />
    </jmsActivationSpec>
    <jmsQueue id="NotificationQ" jndiName="jms/Portfolio/NotificationQueue">
        <properties.wasJms queueName="NotificationQ" />
    </jmsQueue> -->

    <enterpriseApplication id="Messaging" location="Messaging.ear" name="Messaging" />
</server>
